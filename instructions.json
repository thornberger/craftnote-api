{
  "swagger": "2.0",
  "info": {
    "title": "Craftnote API",
    "version": "0.1.0",
    "description": "API for the Craftnote platform.",
    "contact": {
      "name": "Bitfactory GmbH",
      "email": "hello@bitfactory.io",
      "url": "https://www.bitfactory.io/de/"
    },
    "license": {
      "name": "proprietary"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "host": "api.craftnote.de",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-CN-API-Key"
    }
  },
  "paths": {
    "/projects": {
      "get": {
        "description": "List all projects for the authorized account",
        "tags": [
          "List projects"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "description": "The number of items to skip."
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "The numbers of items to return."
          }
        ],
        "responses": {
          "200": {
            "description": "List returned successfully",
            "schema": {
              "$ref": "#/definitions/ProjectsList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unable to authorize",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Invalid content type",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected error"
          }
        }
      },
      "post": {
        "description": "Create a new project",
        "tags": [
          "Create new project"
        ],
        "consumes": [
          "application/json",
          "multipart/form-data",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "multipart/form-data",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The project details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project successfully created",
            "schema": {
              "$ref": "#/definitions/ProjectLink"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Invalid content type",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected server error"
          }
        }
      }
    },
    "/projects/{projectId}/files": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "description": "The ID of the project.",
          "type": "string"
        }
      ],
      "get": {
        "description": "List all files of a project",
        "tags": [
          "List files"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "description": "The number of items to skip."
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "The numbers of items to return (maximum 500)."
          }
        ],
        "responses": {
          "200": {
            "description": "List returned successfully",
            "schema": {
              "$ref": "#/definitions/FilesList"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Not allowed to access this project ID",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project ID was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Upload a file",
        "tags": [
          "Upload file"
        ],
        "consumes": [
          "application/json",
          "multipart/form-data",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "multipart/form-data",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "location",
            "type": "string",
            "description": "The file location"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string",
            "description": "The file type (folder, document, image)"
          },
          {
            "in": "formData",
            "name": "data",
            "type": "file",
            "description": "The content data (required if type is not a folder)"
          }
        ],
        "responses": {
          "200": {
            "description": "File created successfully",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Not allowed to access this project ID",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project ID was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "413": {
            "description": "File size exceeds server limits",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{projectId}/files/{id}": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "description": "The ID of the project.",
          "type": "string"
        }
      ],
      "put": {
        "description": "Update the name of a file",
        "tags": [
          "Update file"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the file to update",
            "type": "string"
          },
          {
            "in": "body",
            "name": "file",
            "description": "The file to update.",
            "schema": {
              "$ref": "#/definitions/UpdateFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File name updated successfully",
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Not allowed to access this project ID",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project ID was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "A file with that name already exists in the folder",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "unexpected server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/createproject/": {
      "post": {
        "deprecated": true,
        "description": "Creates a new project in the overview",
        "tags": [
          "Create new project"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The project data which should be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project successfully created",
            "schema": {
              "$ref": "#/definitions/ProjectLink"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "The request could not be authenticated or the authenticated user is not authorized to access the requested resource."
          },
          "default": {
            "description": "unexpected server error"
          }
        }
      }
    },
    "/createfolder/": {
      "post": {
        "deprecated": true,
        "description": "Creates a new folder in the overview",
        "tags": [
          "Create new folder"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The folder data which should be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder successfully created",
            "schema": {
              "$ref": "#/definitions/ProjectLink"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "The request could not be authenticated or the authenticated user is not authorized to access the requested resource."
          },
          "default": {
            "description": "unexpected server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "A message describing the error",
          "example": "An error occured."
        }
      }
    },
    "Contact": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the contact",
          "example": "Herr Maier",
          "pattern": "^[a-zA-ZäÄöÖüÜß ]+([ -][a-zA-ZäÄöÖüÜß ]+)*$"
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The email of the contact",
          "example": [
            "maier@test.de",
            "maier2@test.de"
          ],
          "pattern": "^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$"
        },
        "phones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The phone of the contact",
          "example": [
            "+49 711 21893732",
            "+49 711 21893733"
          ],
          "pattern": "[0-9 +]+"
        }
      }
    },
    "Project": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this project",
          "example": "Wasserrohrbruch"
        },
        "id": {
          "type": "string",
          "description": "Unique project ID",
          "example": "0000FFB2-9DC1-4A50-A8BB-14C899CC52FC"
        },
        "type": {
          "type": "string",
          "description": "The project type (folder|project)",
          "example": "folder"
        },
        "orderNumber": {
          "type": "string",
          "description": "Order number for this project",
          "example": "12312344d"
        },
        "street": {
          "type": "string",
          "description": "Street address of this project",
          "pattern": "[a-zA-ZßäöüÄÖÜ .\\\\/-]+[ ]?[0-9a-zA-ZßäöüÄÖÜ \\\\/-]*$",
          "example": "Bahnhofstr. 12"
        },
        "zipcode": {
          "type": "string",
          "description": "ZIP code of this project",
          "pattern": "^[0-9a-zA-ZäÄöÖüÜß ]{4,}$",
          "example": 70174
        },
        "city": {
          "type": "string",
          "description": "Name of the city of this project",
          "pattern": "[a-zA-ZäöüÄÖÜß .\\\\\\\\/-]+",
          "example": "Stuttgart"
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "description": "Contacts for this project"
        },
        "billingCity": {
          "type": "string",
          "description": "Billing city of this projeect",
          "example": "Stuttgart",
          "pattern": "[a-zA-ZäöüÄÖÜß .\\\\\\\\/-]+"
        },
        "projects": {
          "type": "array",
          "description": "IDs of projects contained in this project (only applies to type folder)",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProjectsList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        }
      }
    },
    "ProjectLink": {
      "type": "object",
      "required": [
        "webLink",
        "appDeepLink"
      ],
      "properties": {
        "webLink": {
          "type": "string",
          "description": "The link to the created project which can be opened in a browser",
          "example": "https://app.mycraftnote.de/#/project?id=0DDAAAA9-2508-4AAF-A576-E91E76EA8CDB"
        },
        "appDeepLink": {
          "type": "string",
          "description": "The deeplink to the created project which can be opened in a mobile client",
          "example": "mycrafty://project?id=0DDAAAA9-2508-4AAF-A576-E91E76EA8CDB"
        }
      }
    },
    "File": {
      "type": "object",
      "required": [
        "id",
        "name",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the file",
          "example": "00061E3C-9C02-3CE5-EDFD-9186E6F28114"
        },
        "name": {
          "type": "string",
          "description": "The user-defined file name",
          "example": "Projektbericht.pdf"
        },
        "folder": {
          "type": "string",
          "description": "The parent folder ID of this file",
          "example": "00061E3C-9C02-3CE5-EDFD-9186E6F28114"
        },
        "type": {
          "type": "string",
          "description": "The file type (folder, document, image)",
          "example": "folder"
        },
        "creationTimestamp": {
          "type": "string",
          "description": "The creation timestamp as RFC-3339 date string",
          "example": "2019-02-03T04:05:06Z"
        }
      }
    },
    "FilesList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/File"
          }
        }
      }
    },
    "UpdateFile": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The user-defined file name",
          "example": "Projektbericht.pdf"
        }
      }
    }
  }
}
